<?xml version="1.0"?>
<!DOCTYPE tsung SYSTEM "/usr/local/share/tsung/tsung-1.0.dtd">
<!-- set dumptraffic="true" to dump all received and sent packets -->
<!-- set loglevel="debug" for maximum verbosity -->
<tsung loglevel="notice" dumptraffic="false" version="1.0">

  <!-- Client side setup -->
  <clients>
    <!-- maxusers is the max number of simultaneous clients. Don't set
    it too high because you can run out of file descriptors. Remember
    that ssl_esock use 2 fds by connection. -->

    <client host="myhost" weight="2" maxusers="5000">
      <!-- Several virtual IP can be used to simulate more
      machines. Very useful when a load-balancer use the client's IP to
      distribute the traffic amoung a cluster of servers-->
      <ip value="192.168.2.223"></ip>
      <ip value="192.168.2.224"></ip>
    </client>

    <!-- a second machine is used, with a higher weight, and 2 cpus
    (erlang is not SMP aware, so we starts 2 beams to use all the
    CPUs -->
    <client host="myhost2" weight="3" maxusers="5000" cpu="2">
      <ip value="192.168.2.225"></ip>
    </client>

    <!-- If you have a single machine to do the tests, you may add
    this attribute to the client tag: use_controller_vm="true" . This
    will run the virtual users on the same Virtual Machine as the
    controller. Useful if you have problems with starting up remote
    beam -->

  </clients>

  <!-- Server side setup -->
<servers>
  <server host="info.wukong.com" port="80" type="tcp"/>
</servers>


  <!-- several arrival phases can be set: for each phase, you can set
  the mean inter-arrival time between new clients and the phase
  duration -->
 <load>
  <arrivalphase phase="1" duration="1" unit="hour">
    <users interarrival="2" unit="second"></users>
  </arrivalphase>
  <arrivalphase phase="2" duration="1" unit="hour">
    <users interarrival="1" unit="second"></users>
  </arrivalphase>
 </load>
  <!-- HTTP parameters -->

  <!-- If you want to benchmark a proxy server instead of a reguler web server-->
<!--   <default type="ts_http" name="http_use_server_as_proxy" value="true"/> -->

   <option type="ts_http" name="user_agent">
    <user_agent probability="80">Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.8) Gecko/20050513 Galeon/1.3.21</user_agent>
    <user_agent probability="20">Mozilla/5.0 (Windows; U; Windows NT 5.2; fr-FR; rv:1.7.8) Gecko/20050511 Firefox/1.0.4</user_agent>
   </option>
  </options>


 <!-- ********************************************** -->
  <!-- start a session for a http user. the popularity is the
  frequency of this type os session. The sum of all session's
  popularity must be 100 -->
  <!-- ********************************************** -->
 <sessions>
  <session name="http-example" probability="30" type="ts_http">
    <!-- full url with server name, this overrides the "server" config value -->
    <request> <http url="http://www.sina.com.cn/" method="GET" version="1.1"></http> </request>
    <!-- when if_modified_since is defined, it send a GET with If-modified since: Date header -->
    <!-- relative URL, use the latest server config -->
    <request> <http url="http://www.baidu.com" method="GET" version="1.1" if_modified_since="Fri, 14 Nov 2003 02:43:31 GMT"></http> </request>
  </session>


  <session name="http-example1" probability="70" type="ts_http">

   <!-- full url with server name, this overrides the "server" config value -->
    <request> <http url="http://www.sohu.com/" method="GET" version="1.1"></http> </request>
    <!-- when if_modified_since is defined, it send a GET with If-modified since: Date header -->
    <!-- relative URL, use the latest server config -->
    <request> <http url="http://wap.baidu.com/" method="GET" version="1.1" if_modified_since="Fri, 14 Nov 2003 02:43:31 GMT"></http> </request>

  </session>
 </sessions>
</tsung>
